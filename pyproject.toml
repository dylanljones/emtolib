
# -- Project metadata ------------------------------------------------------------------

[project]
name = "emtolib"
description = "Python package and CLI for the EMTO DFT+CPA code"
readme = "README.md"
authors = [
    {name = "Dylan Jones", email = "dylanljones94@gmail.com"},
]
license = {file = "LICENSE"}
dynamic = ["version", "dependencies"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ["emto", "dft", "cpa", "dmft"]
requires-python = ">=3.8"

[project.urls]
Source = "https://github.com/dylanljones/emtolib"

[project.scripts]
emtolib = "emtolib.__main__:cli"

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}


# -- Build -----------------------------------------------------------------------------

[build-system]
requires = [
    "setuptools >= 61.0.0",
    "setuptools_scm[toml] >= 4",
    "setuptools_scm_git_archive",
    "wheel >= 0.37.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
platforms = ["any"]
zip-safe = false
include-package-data = true

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]
write_to = "emtolib/_version.py"
git_describe_command = "git describe --dirty --tags --long --match * --first-parent"


# -- Ruff ------------------------------------------------------------------------------

[tool.ruff]
exclude = [
    ".git",
    ".idea",
    "__pycache__",
    "build",
    "dist",
    ".ruff_cache",
    "*/_version.py",
]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "F", # flake8
    "E", # pycodestyle Errors
    "W", # pycodestyle Warnings
    "I", # isort
    "NPY", # Numpy
    "N", # pep8-naming
    "D", # pydocstyle
]
ignore = [
    "E203",  # Whitespace before ':'
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D401", # First line should be in imperative mood
]
fixable = ["ALL"]  # Allow fix for all enabled rules (when `--fix`) is provided.
unfixable = []

[tool.ruff.lint.per-file-ignores]
"*__init__.py" = ["F401", "I001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
combine-as-imports = true
length-sort = true


# -- Coverage --------------------------------------------------------------------------

[tool.coverage.run]
branch = false
source = ["emtolib"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",

    "def __repr__",
    "def __str__",

    "@abstract",
    "@property",

    "raise AssertionError",
    "raise NotImplementedError",

    "if 0:",
    "if __name__ == .__main__.:"
]
omit = [
    "emtolib/_version.py",
    "emtolib/__main__.py",
]
ignore_errors = true
